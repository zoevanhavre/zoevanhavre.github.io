?knitr
install.packages((cubature))
install.packages("cubature")
load("~/Google Drive/Work/CSIRO_P1/WOMBAT Talk 2016/ZvH_WombatSlides.Rmd")
setwd("~/Google Drive/Work/CSIRO_P1/WOMBAT Talk 2016")
load("~/Google Drive/Work/CSIRO_P1/WOMBAT Talk 2016/Results_All_ForPres.RDATA")
install.packages("txfonts")
install.packages("arev")
- no cognitive changes for $\geq$ 20 years
setwd("~/GitHub/zoevanhavre.github.io/talks/Feb2016_WOMBAT")
?library
?gather
??gather
507-4
507-114
install.packages("ffmpeg")
knitr::opts_chunk$set(
message = FALSE,
warning = FALSE,
collapse = TRUE,
comment = "#>",
fig.align = "center",
cache = FALSE
)
# OPTIONS
require(knitr)
# Set opts_knit
opts_knit$set(cache = TRUE,
error = TRUE,
fig.height = 6,
fig.width = 8,
pointsize=6)
# Set opts_chunk
opts_chunk$set(fig.width=7, fig.height=5, pointsize=8)
load("~/Google Drive/Work/CSIRO_P1/WOMBAT Talk 2016/Results_All_ForPres.RDATA")
require(ggplot2, quietly=TRUE)
require(tidyr, quietly=TRUE)
# function:
DensityPlot_HC<-function(ME, BigY_HC_inFunk=BigY_HC,
.All.tp_inFunk=.All.tp){
y.now=BigY_HC_inFunk[,ME]
region.now=names(BigY_HC_inFunk)[ME]
# pars:
pars.now    <-aggregate( Estimate~ variable+k,
data=.All.tp_inFunk[ .All.tp_inFunk$Region %in% region.now,],
mean)
Mix.pars<-list(  "Mu" =c(pars.now[pars.now$variable%in%"Mu",3]),
"Var"=c(pars.now[pars.now$variable%in%"Sig",3]),
"P"  =c(pars.now[pars.now$variable%in%"P",3]))
In <-list("Y"=y.now, "mu"=Mix.pars[[1]], "sigma"=Mix.pars[[2]], "lambda"=Mix.pars[[3]])
x     <- seq(0.5,4,len=1000)
pars    <- data.frame(comp=paste("K",c(1:length(In$lambda)), sep="_"), In$mu, In$sig, In$lambda )
em.df   <- data.frame(x=rep(x,each=nrow(pars)),pars)
em.df$y <- with(em.df,In.lambda*dnorm(x,mean=In.mu,sd=sqrt(In.sig)))
em.df$In.mu<-	factor(em.df$In.mu)
if(sum(pars.now$k==2)==3) {levels(em.df$In.mu)<-c("HC_k_1", "HC_k_2")
}else{  levels(em.df$In.mu)<-c("HC_k_1")}
#model found
md<-ggplot(data.frame(x=In$Y),aes(x,y=..density..)) + xlab("SUVR")+ylab("Density")+
geom_histogram(fill="deepskyblue4", alpha = 0.8, binwidth=diff(range(y.now))/50)+
geom_polygon(data=em.df,aes(x,y,fill=comp),color="black", alpha=0.5, size=0.2)+
scale_fill_manual("Cluster",labels=format(em.df$In.mu,digits=3), values=c( "dodgerblue4", "cyan2"))+
theme_bw()+
#		  geom_vline(data=pars, aes(xintercept=In.mu),color="black",linetype="dashed", size=0.3)+
#		    theme(legend.position="none")+
#		    annotate("text", x = pars$In.mu[1]-0.01, y =-0.25, label = round(pars$In.mu[1], 2), angle=90, size=2)+
ggtitle(bquote(atop(.(region.now), atop(italic("HC (Blue)")))))+
coord_cartesian(ylim= c(-0.5,  max(em.df$y)+0.5))
return(md)}
# function:
DensityPlot_Both<-function(ME, BigY_HC_inFunk=BigY_HC,
BigY_AD_inFunk=BigY_AD,
.All.tp_inFunk=.All.tp ,
.All_AD_inFunk=.All_AD){
y.now=BigY_HC_inFunk[,ME]
region.now=names(BigY_HC_inFunk)[ME]
y.ad.now=BigY_AD_inFunk[,ME]
# pars:
pars.now    <-aggregate( Estimate~ variable+k,
data=.All.tp_inFunk[ .All.tp_inFunk$Region %in% region.now,],
mean)
.All_AD.tp  <-.All_AD_inFunk[.All_AD_inFunk$TopModel %in% TRUE,]
pars.now.ad <-aggregate(Estimate~ variable+k,
data=.All_AD.tp[ .All_AD.tp$Region %in% region.now,],
mean)
Mix.pars<-list(  "Mu" =c(pars.now.ad[2,3], pars.now[pars.now$variable%in%"Mu",3]),
"Var"=c(pars.now.ad[3,3], pars.now[pars.now$variable%in%"Sig",3]),
"P"  =c(pars.now.ad[1,3], pars.now[pars.now$variable%in%"P",3]))
In <-list("Y"=y.now, "mu"=Mix.pars[[1]], "sigma"=Mix.pars[[2]], "lambda"=Mix.pars[[3]])
x     <- seq(0.5,4,len=1000)
pars    <- data.frame(comp=paste("K",c(1:length(In$lambda)), sep="_"), In$mu, In$sig, In$lambda )
em.df   <- data.frame(x=rep(x,each=nrow(pars)),pars)
em.df$y <- with(em.df,In.lambda*dnorm(x,mean=In.mu,sd=sqrt(In.sig)))
em.df$In.mu<-	factor(em.df$In.mu)
if(sum(pars.now$k==2)==3) {levels(em.df$In.mu)<-c("HC_k_1", "HC_k_2", "AD_k_1")
}else{  levels(em.df$In.mu)<-c("HC_k_1", "AD_k_1")}
#model found
md<-ggplot(data.frame(x=In$Y),aes(x,y=..density..)) + xlab("SUVR")+ylab("Density")+
geom_histogram( data=data.frame(xad=y.ad.now), aes(xad,y=..density..), fill="firebrick1", alpha = 0.3,binwidth=diff(range(y.ad.now))/50)+
geom_histogram(fill="deepskyblue4", alpha = 0.8, binwidth=diff(range(y.now))/50)+
geom_polygon(data=em.df,aes(x,y,fill=comp),color="black", alpha=0.5, size=0.2)+
scale_fill_manual("Cluster",labels=format(em.df$In.mu,digits=3), values=c("firebrick1", "dodgerblue4", "cyan2"))+
theme_bw()+
#		  geom_vline(data=pars, aes(xintercept=In.mu),color="black",linetype="dashed", size=0.3)+
#		    theme(legend.position="none")+
#		    annotate("text", x = pars$In.mu[1]-0.01, y =-0.25, label = round(pars$In.mu[1], 2), angle=90, size=2)+
ggtitle(bquote(atop(.(region.now), atop(italic("HC (Blue) & AD (Red)")))))+
coord_cartesian(ylim= c(-0.5,  max(em.df$y)+0.5))
return(md)}
table(BigY$Type)
require(ggplot2, quietly=TRUE)
require(reshape2, quietly=TRUE)
g.hist.SURV<- ggplot(melt(BigY[,c(4:28)]), aes(value, group=variable))
g.hist.SURV<- g.hist.SURV+ geom_histogram(position="dodge")+ xlab("SURV")+ ylab("Frequency")+ facet_wrap(~variable,ncol=5)+theme_bw()
g.hist.SURV
require(ggplot2, quietly=TRUE)
require(reshape2, quietly=TRUE)
g.hist.SURV<- ggplot(melt(BigY[,c(4:28)]), aes(value, group=variable))
g.hist.SURV<- g.hist.SURV+ geom_histogram(position="dodge", binwidth = 50)+ xlab("SURV")+ ylab("Frequency")+ facet_wrap(~variable,ncol=5)+theme_bw()
g.hist.SURV
require(ggplot2, quietly=TRUE)
require(reshape2, quietly=TRUE)
g.hist.SURV<- ggplot(melt(BigY[,c(4:28)]), aes(value, group=variable))
g.hist.SURV<- g.hist.SURV+ geom_histogram(position="dodge")+ xlab("SURV")+ ylab("Frequency")+ facet_wrap(~variable,ncol=5)+theme_bw()
g.hist.SURV
require(ggplot2, quietly=TRUE)
gp.PropHigh.1<-ggplot(SUVR_ProportionHigh.1, aes(x=Region, y=PropHigh))+ geom_bar(stat="identity", fill="cyan2") + ggtitle("Prevalence of second cluster")+ xlab("Regions")+theme_bw()+ylab("Proportion of (HC) Patients")+theme(axis.text.x = element_text(angle = 90, hjust = 1))
# PLOT!!!
gp.PropHigh.1
require(ggplot2, quietly=TRUE)
gp.PropHigh.1<-ggplot(SUVR_ProportionHigh.1, aes(x=Region, y=PropHigh))+ geom_bar(stat="identity", fill="cyan2") + ggtitle("Weight of second cluster")+ xlab("Regions")+theme_bw()+ylab("Proportion of (HC) Patients")+theme(axis.text.x = element_text(angle = 90, hjust = 1))
# PLOT!!!
gp.PropHigh.1
require(ggplot2, quietly=TRUE)
gp.PropHigh.1<-ggplot(SUVR_ProportionHigh.1, aes(x=Region, y=PropHigh))+ geom_bar(stat="identity", fill="cyan2") + ggtitle("Weight of second cluster (with a larger mean SUVR)")+ xlab("Regions")+theme_bw()+ylab("Proportion of (HC) Patients")+theme(axis.text.x = element_text(angle = 90, hjust = 1))
# PLOT!!!
gp.PropHigh.1
require(ggplot2, quietly=TRUE)
DensityPlot_HC(5)
DensityPlot_HC(10)
DensityPlot_HC(15)
DensityPlot_HC(29)
DensityPlot_HC(5)
DensityPlot_HC(5)
DensityPlot_HC(10)
DensityPlot_HC(15)
DensityPlot_HC(29)
multiplot
multiplot()
library(Zmix)
multiplot()
p1<-DensityPlot_HC(5)
p2<-DensityPlot_HC(10)
p3<-DensityPlot_HC(15)
p4<-DensityPlot_HC(29)
multiplot(p1, p2, p3, p4)
multiplot(p1, p2, p3, p4, ncol=2)
multiplot(p1, p2, p3, p4, col=2)
require(ggplot2, quietly=TRUE)
p1<-DensityPlot_HC(5)
p2<-DensityPlot_HC(10)
p3<-DensityPlot_HC(15)
p4<-DensityPlot_HC(29)
multiplot(p1, p2, p3, p4, cols=2)
require(ggplot2, quietly=TRUE)
q1<-DensityPlot_Both(5)
q2<-DensityPlot_Both(10)
q3<-DensityPlot_Both(15)
q4<-DensityPlot_Both(29)
multiplot(q1, q2, q3, q4, cols=2)
# use top model only:Combine_Result[Combine_Result$TopModel %in% TRUE,]
ggplot(Combine_Result[Combine_Result$TopModel %in% TRUE,], aes( Region , Mu))+
geom_boxplot(aes(col=factor(k)), outlier.size=0.1)+ggtitle("HC patients, Mean SURV by Zmix cluster")+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
#+geom_hline(yintercept=1.5 )#+ coord_flip()
ggplot(cr.tm.K02, aes( Region , Mu))+
geom_boxplot(aes(col=factor(k)), outlier.size=0.1)+ggtitle("HC, ordered by lower means")+
theme(axis.text.x = element_text(angle = 90, hjust = 1))+geom_hline(yintercept=1.5 )
ggplot(Combine_Result[Combine_Result$TopModel %in% TRUE,], aes( Region , Mu))+
geom_boxplot(aes(col=factor(k)), outlier.size=0.1)+ggtitle("HC patients, Mean SURV by Zmix cluster")+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
require(ggplot2, quietly=TRUE)
# 	ggplot(cr.tm.K02, aes( Region , Mu))+
# 		geom_boxplot(aes(col=factor(k)), outlier.size=0.1)+ggtitle("HC, ordered by lower means")+
# 		theme(axis.text.x = element_text(angle = 90, hjust = 1))+geom_hline(yintercept=1.5 )
# use top model only:Combine_Result[Combine_Result$TopModel %in% TRUE,]
ggplot(Combine_Result[Combine_Result$TopModel %in% TRUE,],
aes( Region , Mu))+
geom_boxplot(aes(col=factor(k)), outlier.size=0.1)+
ggtitle("HC patients, Mean SURV by Zmix cluster")+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(Combine_Result_AD[Combine_Result_AD$TopModel %in% TRUE,], aes( Region , Mu))+
geom_boxplot(aes(col=factor(k)), outlier.size=0.1)+ggtitle("AD patients, Mean SURV by Zmix cluster")+
theme(axis.text.x = element_text(angle = 90, hjust = 1))+geom_hline(yintercept=1.5, )#+ coord_flip()
ggplot(cr.tm.K02, aes( Region , Mu))+
geom_boxplot(aes(col=factor(k)), outlier.size=0.1)+ggtitle("HC, ordered by larger means")+theme(axis.text.x = element_text(angle = 90, hjust = 1))+geom_hline(yintercept=1.5 )
ggplot(Combine_Result[Combine_Result$TopModel %in% TRUE,],
aes( Region , Mu))+
geom_boxplot(aes(col=factor(k)), outlier.size=0.1)+
ggtitle("HC patients, Mean SURV by Zmix cluster")+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(cr.tm.K02, aes( Region , Mu))+
geom_boxplot(aes(col=factor(k)), outlier.size=0.1)+
ggtitle("HC, ordered by larger means")+
theme(axis.text.x = element_text(angle = 90, hjust = 1))+
geom_hline(yintercept=1.5 )
ggplot(cr.tm.K02, aes( Region , Mu))+
geom_boxplot(aes(col=factor(k)), outlier.size=0.1)+ggtitle("HC, ordered by lower means")+
theme(axis.text.x = element_text(angle = 90, hjust = 1))+geom_hline(yintercept=1.5 )
newOrd<-
order(
subset(
aggregate(Mu ~ k+Region, cr.tm.K02, median), k==2)$Mu,
decreasing=FALSE)
cr.tm.K02$Region<-factor(cr.tm.K02$Region,
levels=levels(cr.tm.K02$Region)[newOrd])
ggplot(cr.tm.K02, aes( Region , Mu))+
geom_boxplot(aes(col=factor(k)), outlier.size=0.1)+
ggtitle("HC, ordered by lower means")+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
newOrd<-
order(
subset(
aggregate(Mu ~ k+Region, cr.tm.K02, median), k==1)$Mu,
decreasing=FALSE)
cr.tm.K02$Region<-factor(cr.tm.K02$Region,
levels=levels(cr.tm.K02$Region)[newOrd])
ggplot(cr.tm.K02, aes( Region , Mu))+
geom_boxplot(aes(col=factor(k)), outlier.size=0.1)+
ggtitle("HC, ordered by lower means")+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(Combine_Result[Combine_Result$TopModel %in% TRUE,],
aes( Region , Mu))+
geom_boxplot(aes(col=factor(k)), outlier.size=0.1)+
ggtitle("HC patients, Mean SURV by Zmix cluster")+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
#colours  not working
ggplot(ADHC, aes(Region, SUVR ))+geom_boxplot(aes(fill=factor(k_hilo)), outlier.size = 0.1 )+ scale_fill_manual("Cluster",labels=c("HC_k_1", "HC_k_2", "AD_k_1"), values=c( "dodgerblue4", "cyan2","firebrick1"))+	theme_bw()+	theme(axis.text.x = element_text(angle = 90, hjust = 1))+  ggtitle("SUVR by Region + Cluster: HC & AD")
ggplot(ADHC, aes(Region, SUVR ))+geom_boxplot(aes(fill=factor(k_hilo)), outlier.size = 0.1 )+
scale_fill_manual("Cluster",labels=c("HC_low", "HC_high", "AD"), values=c( "dodgerblue4", "cyan2","firebrick1"))+		theme(axis.text.x = element_text(angle = 90, hjust = 1))+  ggtitle("SUVR by Region and Zmix Cluster: HCs vs ADs")
ggplot(ADHC, aes(Region, SUVR ))+geom_boxplot(aes(fill=factor(k_hilo)), outlier.size = 0.1 )+ scale_fill_manual("Cluster",labels=c("HC_k_1", "HC_k_2", "AD_k_1"), values=c( "dodgerblue4", "cyan2","firebrick1"))+	theme_bw()+	theme(axis.text.x = element_text(angle = 90, hjust = 1))+  ggtitle("SUVR by Region + Cluster: HC & AD")
ggplot(HC_SUVR_Results, aes(Region, SUVR ))+geom_boxplot(aes(col=factor(k_hilo)), outlier.size = 0.1 )+
ggtitle("SUVR by Region and Zmix Cluster: Healthy Controls")+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
by mean of low group first
Ord.k1.low<-aggregate(Estimate~Region+k_hilo, HC_SUVR_Results, mean)[1:24, 3] %>% order
HC_SUVR_Results$Region<-factor(HC_SUVR_Results$Region, levels= levels(HC_SUVR_Results$Region)[Ord.k1.low])
ggplot(HC_SUVR_Results, aes(Region, SUVR ))+geom_boxplot(aes(col=factor(k_hilo)), outlier.size = 0.1 )+
ggtitle("SUVR by Region and Zmix Cluster: Healthy Controls")+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
HC_SUVR_Results_K02<- HC_SUVR_Results[ HC_SUVR_Results$Model_K0 %in% 2,]
Ord.k2.low<-aggregate(Estimate~Region+k_hilo, HC_SUVR_Results, mean)[25:41, 3] %>% order
HC_SUVR_Results_K02$Region<-factor(HC_SUVR_Results_K02$Region, levels= levels(HC_SUVR_Results_K02$Region)[Ord.k2.low])
ggplot(HC_SUVR_Results_K02, aes(Region, SUVR ))+geom_boxplot(aes(col=factor(k_hilo)), outlier.size = 0.1 )+
ggtitle("SUVR by Region and Zmix Cluster: Healthy Controls")+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
head(HC_SUVR_Results_K02)
HC_SUVR_Results_K02<- HC_SUVR_Results[ HC_SUVR_Results$Model_K0 %in% 2,]
Ord.k2.low<-aggregate(Estimate~Region+k_hilo, HC_SUVR_Results_K02, mean)[25:41, 3] %>% order
HC_SUVR_Results_K02$Region<-factor(HC_SUVR_Results_K02$Region, levels= levels(HC_SUVR_Results_K02$Region)[Ord.k2.low])
ggplot(HC_SUVR_Results_K02, aes(Region, SUVR ))+geom_boxplot(aes(col=factor(k_hilo)), outlier.size = 0.1 )+
ggtitle("SUVR by Region and Zmix Cluster: Healthy Controls")+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
aggregate(Estimate~Region+k_hilo, HC_SUVR_Results_K02, mean)
aggregate(Estimate~Region+k_hilo, HC_SUVR_Results_K02, mean)[25:41, 3]
aggregate(Estimate~Region+k_hilo, HC_SUVR_Results_K02, mean)
HC_SUVR_Results_K02<- HC_SUVR_Results[ HC_SUVR_Results$Model_K0 %in% 2,]
Ord.k2.low<-aggregate(Estimate~Region+k_hilo, HC_SUVR_Results_K02, mean)[17:32, 3] %>% order
HC_SUVR_Results_K02$Region<-factor(HC_SUVR_Results_K02$Region, levels= levels(HC_SUVR_Results_K02$Region)[Ord.k2.low])
ggplot(HC_SUVR_Results_K02, aes(Region, SUVR ))+geom_boxplot(aes(col=factor(k_hilo)), outlier.size = 0.1 )+
ggtitle("SUVR by Region and Zmix Cluster: Healthy Controls")+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
Ord.k1.low
aggregate(Estimate~Region+k_hilo, HC_SUVR_Results, mean)[1:24, 3]
aggregate(Estimate~Region+k_hilo, HC_SUVR_Results, mean)
Ord.k1.low<-aggregate(Estimate~Region+k_hilo, HC_SUVR_Results, mean)[1:24, 3] %>% order
aggregate(Estimate~Region+k_hilo, HC_SUVR_Results, mean)[1:24, 3]
Ord.k1.low<-aggregate(Estimate~Region+k_hilo, HC_SUVR_Results, mean)[1:24, 3] %>% order
aggregate(Estimate~Region+k_hilo, HC_SUVR_Results, mean)[1:24, 3][Ord.k1.low]
HC_SUVR_Results$Region
levels(HC_SUVR_Results$Region)[Ord.k1.low]
factor(HC_SUVR_Results$Region, levels= levels(HC_SUVR_Results$Region)[Ord.k1.low])
Ord.k1.low<-aggregate(Estimate~Region+k_hilo, HC_SUVR_Results, mean)[1:24, 3] %>% order
HC_SUVR_Results$Region<-factor(HC_SUVR_Results$Region, levels= levels(HC_SUVR_Results$Region)[Ord.k1.low])
ggplot(HC_SUVR_Results, aes(Region, SUVR ))+geom_boxplot(aes(col=factor(k_hilo)), outlier.size = 0.1 )+
ggtitle("SUVR by Region and Zmix Cluster: Healthy Controls")+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
HC_SUVR_Results_K02<- HC_SUVR_Results[ HC_SUVR_Results$Model_K0 %in% 2,]
aggregate(Estimate~Region+k_hilo, HC_SUVR_Results_K02, mean)
Ord.k2.low<-aggregate(Estimate~Region+k_hilo, HC_SUVR_Results_K02, mean)[18:34, 3] %>% order
HC_SUVR_Results_K02$Region<-factor(HC_SUVR_Results_K02$Region, levels= levels(HC_SUVR_Results_K02$Region)[Ord.k2.low])
ggplot(HC_SUVR_Results_K02, aes(Region, SUVR ))+geom_boxplot(aes(col=factor(k_hilo)), outlier.size = 0.1 )+
ggtitle("SUVR by Region and Zmix Cluster: Healthy Controls")+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
# compare to SUVR from AD's
names(BigY_AD)[2]<-"PIB"
BigY_AD_tall<- gather(BigY_AD, key = Region, value = SUVR,       c(4:39))
AD_SUVR_Results<-droplevels(merge(BigY_AD_tall, AD_Alz_TopModel_mu))
ADHC<- rbind(HC_SUVR_Results, AD_SUVR_Results)
# HC and AD (by HC group 1)
ggplot(ADHC, aes(Region, SUVR ))+geom_boxplot(aes(fill=factor(k_hilo)), outlier.size = 0.1 )+ scale_fill_manual("Cluster",labels=c("HC_k_1", "HC_k_2", "AD_k_1"), values=c( "dodgerblue4", "cyan2","firebrick1"))+	theme_bw()+	theme(axis.text.x = element_text(angle = 90, hjust = 1))+  ggtitle("SUVR by Region + Cluster: HC & AD")
new.ord<-aggregate(Estimate~Region+k_hilo, ADHC, mean)[42:65,3]%>% order
ADHC$Region<-factor(ADHC$Region, levels=levels(ADHC$Region)[new.ord])
#colours  not working
ggplot(ADHC, aes(Region, SUVR ))+geom_boxplot(aes(fill=factor(k_hilo)), outlier.size = 0.1 )+
scale_fill_manual("Cluster",labels=c("HC_low", "HC_high", "AD"), values=c( "dodgerblue4", "cyan2","firebrick1"))+		theme(axis.text.x = element_text(angle = 90, hjust = 1))+  ggtitle("SUVR by Region and Zmix Cluster: HCs vs ADs")
`ggplot(HC_SUVR_Results, aes(Region, SUVR ))+geom_boxplot(aes(col=factor(k_hilo)), outlier.size = 0.1 )+
ggtitle("SUVR by Region and Zmix Cluster: Healthy Controls")+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(HC_SUVR_Results, aes(Region, SUVR ))+geom_boxplot(aes(col=factor(k_hilo)), outlier.size = 0.1 )+
ggtitle("SUVR by Region and Zmix Cluster: Healthy Controls")+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
Ord.k1.low<-aggregate(Estimate~Region+k_hilo, HC_SUVR_Results, mean)[1:24, 3] %>% order
HC_SUVR_Results$Region<-factor(HC_SUVR_Results$Region, levels= levels(HC_SUVR_Results$Region)[Ord.k1.low])
ggplot(HC_SUVR_Results, aes(Region, SUVR ))+geom_boxplot(aes(col=factor(k_hilo)), outlier.size = 0.1 )+
ggtitle("SUVR by Region and Zmix Cluster: Healthy Controls")+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
Ord.k1.low<-aggregate(Estimate~Region+k_hilo, HC_SUVR_Results, mean)[1:24, 3] %>% order
HC_SUVR_Results$Region<-factor(HC_SUVR_Results$Region, levels= levels(HC_SUVR_Results$Region)[Ord.k1.low])
ggplot(HC_SUVR_Results, aes(Region, SUVR ))+geom_boxplot(aes(col=factor(k_hilo)), outlier.size = 0.1 )+
ggtitle("SUVR by Region and Zmix Cluster: Healthy Controls")+
theme(axis.text.x = element_text(angle = 90, hjust = 1))+ scale_fill_manual("Cluster",labels=c("HC_k_1", "HC_k_2"), values=c( "dodgerblue4", "cyan2"))
ggplot(HC_SUVR_Results, aes(Region, SUVR ))+
geom_boxplot(aes(col=factor(k_hilo)), outlier.size = 0.1 )+
scale_fill_manual("Cluster",labels=c("HC_k_1", "HC_k_2"),
values=c("dodgerblue4", "cyan2"))+
theme(axis.text.x = element_text(angle = 90, hjust = 1))+
theme_bw()+  ggtitle("SUVR by Region and Zmix Cluster: Healthy Controls")
ggplot(HC_SUVR_Results, aes(Region, SUVR ))+
geom_boxplot(aes(fill=factor(k_hilo)), outlier.size = 0.1 )+ scale_fill_manual("Cluster",labels=c("HC_k_1", "HC_k_2", "AD_k_1"), values=c( "dodgerblue4", "cyan2","firebrick1"))+	theme_bw()+	theme(axis.text.x = element_text(angle = 90, hjust = 1))+  ggtitle("SUVR by Region + Cluster: HC & AD")
ggplot(df.new.t,aes(Region,Proportion))+geom_bar(aes(fill=Diagnosis),stat="identity",position='dodge')+facet_grid(~k_hilo)+theme_bw() +  theme(axis.text.x = element_text(angle = 90, hjust = 1), axis.text.y = element_text( hjust = 1))+ggtitle("Memory Status by Zmix cluster")+ scale_fill_manual("Memory",labels=c("Complainer", "Non-Complainer"), values=c("orange", "green"))
ggplot(df.new.t,aes(Region,Proportion))+geom_bar(aes(fill=Genotype),stat="identity",position='dodge')+facet_grid(~k_hilo)+theme_bw() +  theme(axis.text.x = element_text(angle = 90, hjust = 1), axis.text.y = element_text( hjust = 1))+ggtitle("Genotype by Zmix cluster")+ scale_fill_manual("Genotype",labels=c("ApoE- (good)", "ApoE+ (bad)"), values=c("red", "yellow"))
head(df.new.t)
head(df.new)
df.new<-aggregate(ApoE~ Region+k_hilo, droplevels(top_demogs),function(x) prop.table(table(x)) )
df.new<-as.data.frame(as.matrix(df.new))
head(df.new)
df.new.t<-gather(df.new,key=Genotype, value=Proportion,ApoE.ApoE_Neg,  ApoE.ApoE_Pos  )
head(df.new.t)
df.new<-aggregate(ApoE~ Region+k_hilo, droplevels(top_demogs),function(x) prop.table(table(x)) )
df.new<-as.data.frame(as.matrix(df.new))
df.new.t<-gather(df.new,key=Genotype, value=Proportion,ApoE.ApoE_Neg,  ApoE.ApoE_Pos  )
df.new.t$Proportion<- factor2numeric( df.new.t$Proportion)
levels(df.new.t$k_hilo)<-c("HC: high mean group","HC: low mean group")
ggplot(df.new.t,aes(Region,Proportion))+geom_bar(aes(fill=Genotype),stat="identity",position='dodge')+facet_grid(~k_hilo)+theme_bw() +  theme(axis.text.x = element_text(angle = 90, hjust = 1), axis.text.y = element_text( hjust = 1))+ggtitle("Genotype by Zmix cluster")+ scale_fill_manual("Genotype",labels=c("ApoE- (good)", "ApoE+ (bad)"), values=c("red", "yellow"))
DensityPlot_HC(12)
DensityPlot_HC(2)
DensityPlot_HC(8)
HC_SUVR_Results_K02<- HC_SUVR_Results[ HC_SUVR_Results$Model_K0 %in% 2,]
Ord.k2.low<-aggregate(Estimate~Region+k_hilo, HC_SUVR_Results_K02, mean)[18:34, 3] %>% order
HC_SUVR_Results_K02$Region<-factor(HC_SUVR_Results_K02$Region, levels= levels(HC_SUVR_Results_K02$Region)[Ord.k2.low])
ggplot(HC_SUVR_Results_K02, aes(Region, SUVR ))+geom_boxplot(aes(col=factor(k_hilo)), outlier.size = 0.1 )+
ggtitle("SUVR by Region and Zmix Cluster: Healthy Controls")+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
names(BigY_AD)[2]<-"PIB"
BigY_AD_tall<- gather(BigY_AD, key = Region, value = SUVR,       c(4:39))
AD_SUVR_Results<-droplevels(merge(BigY_AD_tall, AD_Alz_TopModel_mu))
ADHC<- rbind(HC_SUVR_Results_K02, AD_SUVR_Results)
# HC and AD (by HC group 1)
ggplot(ADHC, aes(Region, SUVR ))+geom_boxplot(aes(fill=factor(k_hilo)), outlier.size = 0.1 )+ scale_fill_manual("Cluster",labels=c("HC_k_1", "HC_k_2", "AD_k_1"), values=c( "dodgerblue4", "cyan2","firebrick1"))+	theme_bw()+	theme(axis.text.x = element_text(angle = 90, hjust = 1))+  ggtitle("SUVR by Region + Cluster: HC & AD")
head(AD_SUVR_Results)
table(BigY$Type)
View(ForSIMI_w)
View(ForSIMI_num)
plot(corr(ForSIMI_num)))
plot(corr(ForSIMI_num))
plot(cor(ForSIMI_num))
plot(cov(ForSIMI_num))
image(cov(ForSIMI_num))
image(cor(ForSIMI_num))
library(Hmisc)
rcorr(x, type="pearson") # type can be pearson or spearman
#mtcars is a data frame
rcorr(as.matrix(ForSIMI_num))
library(Hmisc)
rcorr(x, type="pearson") # type can be pearson or spearman
#mtcars is a data frame
plot(rcorr(as.matrix(ForSIMI_num)))
library(Hmisc)
rcorr(x, type="pearson") # type can be pearson or spearman
#mtcars is a data frame
plot(rcorrForSIMI_num))
library(corrgram)
corrgram(mtcars, order=TRUE, lower.panel=panel.shade,
upper.panel=panel.pie, text.panel=panel.txt,
main="Car Milage Data in PC2/PC1 Order")
library(corrgram)
library(corrgram)
corrgram(ForSIMI_num, order=TRUE, lower.panel=panel.shade,
upper.panel=panel.pie, text.panel=panel.txt,
main="")
install.packages(corrgram)
install.packages("corrgram")
library(corrgram)
corrgram(ForSIMI_num, order=TRUE, lower.panel=panel.shade,
upper.panel=panel.pie, text.panel=panel.txt,
main="")
library(corrgram)
corrgram(ForSIMI_num, order=TRUE, lower.panel=panel.shade,
main="")
library(corrgram)
corrgram(ForSIMI_num, order=TRUE, lower.panel=panel.shade,main="")
cor(ForSIMI_num)
cor(ForSIMI_num)
cor(ForSIMI_w)
image(cor(ForSIMI_num))
image(cov(ForSIMI_num))
head(df.new.t)
head(aggregate(ApoE~ Region+k_hilo, droplevels(top_demogs),function(x) prop.table(table(x)) ))
devtools:install_github('zoevanhavre/Zmix') # Thank you Hadley!
library(devtools)
devtools:install_github('zoevanhavre/Zmix') # Thank you Hadley!
devtools::install_github('zoevanhavre/Zmix') # Thank you Hadley!
require(devtools) > devtools::install_github('zoevanhavre/Zmix')
ggplot(ADHC, aes(Region, SUVR ))+geom_boxplot(aes(fill=factor(k_hilo)), outlier.size = 0.1 )+ scale_fill_manual("Cluster",labels=c("HC_k_1", "HC_k_2", "AD_k_1"), values=c( "dodgerblue4", "cyan2","firebrick1"))+	theme_bw()+	theme(axis.text.x = element_text(angle = 90, hjust = 1))+  ggtitle("SUVR by Region, coloured by group (and type)")
library(plyr)
